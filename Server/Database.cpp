#include "Database.h"
#include "Item.h"
#include "Message.h"
#include "sqlite/sqlite3.h"
#pragma comment (lib,"sqlite3.lib")

extern BYTE shumiaoyunshu[100];
extern BYTE chewangkaoyan[100];
extern BYTE baofengtiaozhan[2048] ;
extern BYTE taskaward[128];
extern BYTE StartTimerChallenge[1024];
extern BYTE StartTimerChallenge2[1024];
extern BYTE BorderOver[187];
extern BYTE RankedOver[402];
extern BYTE BorderOnePlayerInfo[1305];

extern BYTE jump24238[91];
extern BYTE jump24255[91];
extern BYTE msg900[52];


sqlite3* UserDB;
sqlite3* PlayerDB;
void InitTaskInfo()
{
	//模拟封包 对照数据结构
	//暴风车队NPC可用自动跑老地图104-138
	//\x01\x6e\x00\x00\x00\x01\xcc\xd8\xc0\xef\xcb\xb9\xcc\xb9\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\xa9\xb7\xe7\xcc\xec\xca\xb9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x46\x00\x00\x27\x26\x00\x00\x2c\x77\x00\x00\x28\x3f\x00\x00\x2c\x79\x00\x00\x2c\x75\x00\x00\x2c\x78\x00\x00\x2c\x76\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2c\x7a\x00\x00\x00\x00\x00\x00\x2c\x70\x00\x00\x27\x2d\x00\x00\x27\x75\x00\x00\x27\x73\x00\x00\x28\x08\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x27\x10\x00\x22\x00\x00\x00\x41\x00\x00\x00\x0f\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x22\x00\x00\x00\x37\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x01\x86\x9f\x00\x00\x00\xc8\x00\x22\x00\x00\x00\x3c\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x22\x00\x00\x00\x46\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\xff\xff\xff\x9c\x00\x22\x00\x00\x00\x50\x00\x00\x00\x19\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x01\xff\xff\xff\x9c\xff\xfe\x79\x61\x04\x00\x12\x00\x00\x00\x08\x00\x00\x00\x00\x00\x0f\x42\x36\x00\x00\x27\x0f\x00\x12\x00\x00\x00\x0a\x00\x00\x1f\x40\x00\x00\x03\xe7\x00\x00\x00\x14\x00\x12\x00\x00\x00\x01\x00\x00\x13\x88\x00\x00\x00\x14\xff\xff\xff\xec\x00\x12\x00\x00\x00\x02\x00\x00\x13\x88\xff\xff\xff\xec\xff\xff\xff\x9c\x00\x00\x00\x00
	memcpy(baofengtiaozhan, "\x00\x00\xea\x60\x00\x00\x00\x49\x00\x00\x00\x79\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x9b\x28\x9c\x8c\x6b\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x01\x6e\x00\x00\x00\x01\xcc\xd8\xc0\xef\xcb\xb9\xcc\xb9\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\xa9\xb7\xe7\xcc\xec\xca\xb9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x46\x00\x00\x27\x26\x00\x00\x2c\x77\x00\x00\x28\x3f\x00\x00\x2c\x79\x00\x00\x2c\x75\x00\x00\x2c\x78\x00\x00\x2c\x76\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2c\x7a\x00\x00\x00\x00\x00\x00\x2c\x70\x00\x00\x27\x2d\x00\x00\x27\x75\x00\x00\x27\x73\x00\x00\x28\x08\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x27\x10\x00\x22\x00\x00\x00\x41\x00\x00\x00\x0f\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x22\x00\x00\x00\x37\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x01\x86\x9f\x00\x00\x00\xc8\x00\x22\x00\x00\x00\x3c\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x22\x00\x00\x00\x46\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\xff\xff\xff\x9c\x00\x22\x00\x00\x00\x50\x00\x00\x00\x19\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x01\xff\xff\xff\x9c\xff\xfe\x79\x61\x04\x00\x12\x00\x00\x00\x08\x00\x00\x00\x00\x00\x0f\x42\x36\x00\x00\x27\x0f\x00\x12\x00\x00\x00\x0a\x00\x00\x1f\x40\x00\x00\x03\xe7\x00\x00\x00\x14\x00\x12\x00\x00\x00\x01\x00\x00\x13\x88\x00\x00\x00\x14\xff\xff\xff\xec\x00\x12\x00\x00\x00\x02\x00\x00\x13\x88\xff\xff\xff\xec\xff\xff\xff\x9c\x00\x00\x00\x00\x01\x6e\x00\x00\x00\x02\xbf\xad\xc0\xf2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\xa9\xb7\xe7\xcc\xec\xca\xb9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x46\x00\x00\x27\x22\x00\x00\x2c\x07\x00\x00\x28\x42\x00\x00\x2c\x09\x00\x00\x2c\x05\x00\x00\x2c\x08\x00\x00\x2c\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2c\x0a\x00\x00\x00\x00\x00\x00\x2c\x6b\x00\x00\x28\x7c\x00\x00\x27\x75\x00\x00\x27\x73\x00\x00\x2b\xed\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x27\x10\x00\x22\x00\x00\x00\x1e\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x22\x00\x00\x00\x28\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x01\x86\x9f\x00\x00\x00\xc8\x00\x22\x00\x00\x00\x37\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x22\x00\x00\x00\x3c\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\xff\xff\xff\x9c\x00\x22\x00\x00\x00\x50\x00\x00\x00\x19\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x01\xff\xff\xff\x9c\xff\xfe\x79\x61\x04\x00\x12\x00\x00\x00\x08\x00\x00\x1f\x40\x00\x00\x00\xc8\x00\x00\x00\x01\x00\x12\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x12\x00\x00\x00\x01\x00\x00\x03\xe8\x00\x00\x00\x00\xff\xff\xfe\x0c\x00\x12\x00\x00\x00\x02\x00\x00\x00\x00\xff\xff\xfc\x19\xff\xff\xd8\xf1\x00\x00\x00\x00\x01\x6e\x00\x00\x00\x03\xbc\xd3\xce\xc4\xcb\xb9\xc0\xfb\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\xa9\xb7\xe7\xcc\xec\xca\xb9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x46\x00\x00\x27\x26\x00\x00\x2c\x0d\x00\x00\x27\x8c\x00\x00\x2c\x0f\x00\x00\x2c\x0b\x00\x00\x2c\x0e\x00\x00\x2c\x0c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2c\x10\x00\x00\x00\x00\x00\x00\x2b\x8b\x00\x00\x28\x7e\x00\x00\x27\x75\x00\x00\x27\x73\x00\x00\x28\x03\x00\x00\x29\x89\x00\x00\x00\x05\x00\x00\x27\x10\x00\x22\x00\x00\x00\x28\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x22\x00\x00\x00\x19\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x01\x86\x9f\x00\x00\x01\x2c\x00\x22\x00\x00\x00\x28\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x01\x2c\x00\x00\x00\x00\x00\x22\x00\x00\x00\x50\x00\x00\x00\x0a\x00\x00\x00\x0a\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\xff\xff\xff\x38\x00\x22\x00\x00\x00\x50\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00\x01\xff\xff\xff\x38\xff\xfe\x79\x61\x04\x00\x12\x00\x00\x00\x08\x00\x00\x1f\x40\x00\x00\x03\x20\x00\x00\x00\x32\x00\x12\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x12\x00\x00\x00\x01\x00\x00\x13\x88\x00\x00\x00\xc8\xff\xff\xff\x38\x00\x12\x00\x00\x00\x02\x00\x00\x00\x00\xff\xff\xff\xce\xff\xfe\x79\x61\x00\x00\x00\x00\x01\x6e\x00\x00\x00\x04\xd2\xc1\xc1\xab\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\xa9\xb7\xe7\xcc\xec\xca\xb9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x46\x00\x00\x27\x22\x00\x00\x2c\x13\x00\x00\x27\x77\x00\x00\x27\x36\x00\x00\x2c\x11\x00\x00\x2c\x14\x00\x00\x2c\x12\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2c\x15\x00\x00\x00\x00\x00\x00\x2b\xe6\x00\x00\x27\x2d\x00\x00\x27\x75\x00\x00\x27\x73\x00\x00\x29\xb8\x00\x00\x28\xbc\x00\x00\x00\x05\x00\x00\x27\x10\x00\x22\x00\x00\x00\x28\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x22\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x01\x86\x9f\x00\x00\x00\xc8\x00\x22\x00\x00\x00\x0f\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x22\x00\x00\x00\x19\x00\x00\x00\x0a\x00\x00\x00\x0a\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\xff\xff\xff\x38\x00\x22\x00\x00\x00\x32\x00\x00\x00\x14\x00\x00\x00\x0a\x00\x00\x00\x03\x00\x00\x00\x05\x00\x00\x00\x01\xff\xff\xff\x38\xff\xfe\x79\x61\x04\x00\x12\x00\x00\x00\x08\x00\x00\x00\x00\x00\x0f\x42\x36\x00\x00\x27\x0f\x00\x12\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x27\x0f\x00\x00\x03\xe7\x00\x12\x00\x00\x00\x01\x00\x00\x0f\xa0\x00\x00\x00\x64\xff\xff\xfe\x0c\x00\x12\x00\x00\x00\x02\x00\x00\x00\x00\xff\xff\xfc\x19\xff\xfe\x79\x61\x00\x00\x00\x00\x01\x6e\x00\x00\x00\x05\xb6\xf7\xd7\xf4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb1\xa9\xb7\xe7\xcc\xec\xca\xb9\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x46\x00\x00\x27\x26\x00\x00\x2c\x9d\x00\x00\x28\x53\x00\x00\x00\x00\x00\x00\x2c\x9b\x00\x00\x2c\x9e\x00\x00\x2c\x9c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2c\x9f\x00\x00\x00\x00\x00\x00\x2b\xe5\x00\x00\x27\x2d\x00\x00\x27\x75\x00\x00\x27\x73\x00\x00\x28\x75\x00\x00\x27\x97\x00\x00\x00\x0a\x00\x00\x27\x10\x00\x22\x00\x00\x00\x28\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x22\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x01\x86\x9f\x00\x00\x00\x32\x00\x22\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x32\x00\x00\x00\x00\x00\x22\x00\x00\x00\x0c\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\xff\xff\xff\x38\x00\x22\x00\x00\x00\x12\x00\x00\x00\x05\x00\x00\x00\x0a\x00\x00\x00\x05\x00\x00\x00\x05\x00\x00\x00\x01\xff\xff\xff\x38\xff\xfe\x79\x61\x04\x00\x12\x00\x00\x00\x08\x00\x00\x00\x00\x00\x0f\x42\x36\x00\x00\x27\x0f\x00\x12\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x27\x0f\x00\x00\x03\xe7\x00\x12\x00\x00\x00\x01\x00\x00\x03\xe8\x00\x00\x00\x64\xff\xff\xff\x9c\x00\x12\x00\x00\x00\x02\x00\x00\x01\xf4\xff\xff\xff\xb0\xff\xff\xd8\xf1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", 1928);
	memcpy(shumiaoyunshu, "\x00\x00\xea\x60\x00\x00\x00\x6e\x00\x00\x00\xc7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xdf\x20\xd2\xed\xf9\x00\x02\x00\x02\xbf\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", 98);
	//memcpy(chewangkaoyan, "\x00\x00\xea\x60\x00\x00\x00\x48\x00\x00\x00\x71\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x76\x7a\x7b\x38\xf9\x00\x03\x00\x00\xd6\xd8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",98);
	memcpy(taskaward, "\x00\x00\x27\x11\x00\x13\x00\x00\x00\x46\x01\x00\x00\x00\x00\x00\x00\x00\x0d\x00\x00\x00\x00\x00\x00\x73\x33\x00\x5b\x00\x00\x01\x90\x00\x00\xcd\x69\x00\x00\x00\x00\x00\x0F\xFF\xFF\xFF\x00\x00\x64\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xfc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", 127);
	memcpy(StartTimerChallenge, "\x00\x00\x1f\x40\x00\x00\x01\x58\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\xe0\x68\x45\xe0\x16\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x27\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\xff\xff\xff\xff\x00\x01\x00\x0b\x00\x00\x27\x11\x00\x00\x68\x2e\x00\x00\x00\x00\x00\x32\x00\x00\x00\x01\x64\x69\xa9\xa7\x04\x00\x89\x03\x25\x01\x01\x64\x69\xa9\xa7\x22\x22\x5a\xbe\x01\x01\x91\x8f\x12\xa1\x16\x72\x36\xcb\xae\x15\x41\x6b\x67\x98\x20\x42\xe4\x91\xe9\x21\xe8\xe8\x62\x58\x85\x00\x00\x00\x00\x04\xff\xff\x00\x00\x00\xc8\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7c\xbf\xf1\x01\x00\x1d\x00\x00\x27\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x05\xbe\xaa\xaa\xe3\xcb\x3a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x00\x0b\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x37\x00\x00\x02\x00\x19\x00\x00\x05\x00\x00\x02\x58\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x0b\xb8\x00\x19\x00\x00\x05\x00\x00\x01\x2c\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x03\xe8\x00\x00\x03\xe8\x00\x3b\x00\x01\x02\x00\x19\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x32\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x1d\x00\x01\x06\x00\x00\x00\x00\x00\x00\x9c\x40\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x27\x10\x00\x00\x00\x00\x00\x0a\x00\x00\x01\x00\x05\x00\x02\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00", 589);
	
	memcpy(jump24238, "\x00\x00\x27\x11\x00\x00\x00\x03\x00\x00\x00\x31\x00\x00\x00\x03\x00\x00\x27\x10\x00\x00\x79\x00\x00\x00\x00\x0a\x00\x00\x00\x0a\x00\x00\x00\x01\x00\x31\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x02\x4a\x00\x00\x00\x01\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x61\x6c", 91);
	
	memcpy(StartTimerChallenge2, "\x00\x00\x1f\x40\x00\x00\x01\xaf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x39\x52\xf3\x7d\xac\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x27\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\xa1\x08\x00\x01\x00\x0b\x00\x00\x27\x11\x00\x00\x68\x2e\x00\x00\x00\x01\x0a\x32\x00\x00\x00\x00\x64\x72\x23\xfd\x65\x02\x30\x02\x2e\x01\x01\x64\x72\x23\xfd\x12\x8c\x17\x3e\x01\x01\x70\x4e\x24\xae\x45\xd2\xb2\xfa\x36\x7b\x4b\xe7\xe1\x03\x1e\xa8\x8e\xa1\xa6\x39\xfe\x08\xb3\x92\xe3\x00\x00\x00\x00\x04\xff\xff\x00\x00\x00\xc8\x00\x00\x00\xc8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\xaf\x5d\x01\x00\x35\x00\x00\x27\x11\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x01\x03\x00\x08\x00\xcc\x00\xcc\x00\x01\x00\x08\x00\xcf\x00\xcf\x00\x01\x00\x08\x00\xd2\x00\xd2\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x0a\xaa\x1d\xb2\x76\x6c\x86\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x2e\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\xcb\x00\x20\x00\x00\x00\x01\x00\x16\x00\x00\x27\x11\x00\x00\x00\x03\x00\x00\x00\x0d\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x03\x00\x00\x27\x11\x00\x01\x00\x00\x00\x01\x03\x00\x08\x00\xcc\x00\x00\x00\x00\x00\x08\x00\xcf\x00\x00\x00\x00\x00\x08\x00\xd2\x00\x00\x00\x00\x00\x02\x00\x84\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\xc1\xd2\xd1\xe6\xb7\xc9\xd0\xd0\x00\x42\xc1\xf7\xbb\xf0\xc1\xfa\xbe\xa7\xb8\xb3\xd3\xe8\xc8\xfc\xb3\xb5\xb7\xc9\xd0\xd0\xb5\xc4\xc4\xdc\xc1\xa6\xa3\xac\xb3\xd6\xd0\xf8\xca\xb1\xbc\xe4\x35\xc3\xeb\xa3\xac\xc0\xe4\xc8\xb4\xca\xb1\xbc\xe4\x31\x35\xc3\xeb\xa3\xac\xca\xb9\xd3\xc3\xb4\xce\xca\xfd\x31\xb4\xce\x01\x00\x00\x00\x00\x00\x00\x00\x09\x00\x00\x00\x00\x00\x00\x00\x00\x13\x88\x00\x00\x00\x01\x63\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x37\x00\x00\x02\x00\x19\x00\x00\x05\x00\x00\x02\x58\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x0b\xb8\x00\x19\x00\x00\x05\x00\x00\x01\x2c\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x03\xe8\x00\x00\x03\xe8\x00\x3b\x00\x01\x02\x00\x19\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x32\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x00\x00\x00\x1d\x00\x01\x06\x00\x00\x00\x00\x00\x00\x9c\x40\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\x27\x10\x00\x00\x00\x00\x00\x0a\x00\x00\x01\x00\x05\x00\x02\x00\x00\x00\x07\xe0\x00\x00\x00\x00\x00\x00", 816);
	//4级烈焰飞行 
	//技能时长00 00 1b 58 或者00 00 13 88 后面是冷却00 00 27 10 技能次数03

	memcpy(jump24255, "\x00\x00\x00\x03\x00\x00\x00\x77\x00\xFF\xFF\xFF\x00\x01\x0f\xe3\x00\x01\x0f\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x61\x6c", 91);


	memcpy(BorderOver, "\x00\xb1\x00\x00\x27\x11\x00\x02\xa2\x93\x00\x00\x00\x01\x00\x00\x00\x00\x00\x03\x02\x64\x00\x00\x01\xf4\x00\x00\x26\x56\x00\x00\x00\x64\x00\x00\x3d\x36\x00\x00\x00\x64\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x0f\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x30\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x01\x01\x0f\xa0\x00\x00\x06\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x42\x68\x00\x04\x00\x00\x00\x00", 187);
	memcpy(RankedOver, "\x01\x01\x79\x00\x00\x27\x11\x00\x01\xac\x54\x00\x00\x00\x00\x00\x00\x01\x90\x00\x01\x01\x70\x00\x00\x00\x9c\x00\x03\x14\x17\x02\x00\x00\x00\x05\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x90\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x26\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\xbb\x00\x16\x00\x00\x00\x16\x00\x00\x00\x04\x00\x00\x00\x13\x00\x00\x00\x28\x00\x00\x00\xa9\x00\x16\x00\x00\x00\x16\x00\x00\x00\x04\x00\x00\x00\x1d\x00\x00\x00\x28\x00\x00\x00\xb3\x00\x24\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x68\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0a\x00\x00\x00\x17\x00\x00\x00\x04\x00\x00\x00\x06\x00\x00\x00\x26\x00\x00\x01\x2c\x00\x00\x00\x05\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x30\x17\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x01\x01\x00\x00\x00\x06\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x59\xd8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", 402);
	memcpy(BorderOnePlayerInfo, "\x03\x25\x42\x59\xcb\x12\x44\xd8\x02\x0e\x00\x00\x00\x00\x00\x01\x23\xb2\xe2\xca\xd4\xd4\xb1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x41\x02\x00\x00\x00\x04\xff\xff\xff\xff\x00\x0c\x1e\x1b\x04\x38\x06\x98\x00\x04\x78\xdf\x00\x01\xeb\xe4\x00\x00\xb3\xdc\x00\x13\xcc\xb9\x09\xf7\x37\x36\x09\xf7\x37\x36\x00\x00\x5b\xf4\x00\x00\x00\xf0\x00\x00\x00\x00\x0f\x74\x6a\xf9\x00\x01\x53\x18\x01\xcc\x80\xb1\x00\x25\x3d\xa6\x00\x00\x04\x1a\x00\x22\x4f\xc8\x00\x00\x05\xb4\x00\x09\x44\xcd\x00\x00\xa0\x17\x4b\x3e\x94\x22\xb5\xad\xcd\xcb\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x36\x1c\x00\x00\x03\x40\x00\x3d\x01\x00\x00\x08\x7f\x00\x05\x09\x6b\x00\x99\x02\x66\x04\x31\x0f\x51\xdd\x85\x03\x00\x06\xba\x33\x00\x00\x00\x00\x00\x00\x01\x29\xb1\x00\x0d\x7e\x05\x00\x00\x00\x02\x08\x00\x00\x03\x16\x00\x00\x01\x40\x00\x00\x00\x00\x00\x20\x22\x2d\x00\x00\x05\x7e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x60\x64\x9c\x7f\x00\x00\x07\x60\x00\x00\x00\x00\x00\x00\x00\x00\x00\x70\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x69\x00\x2e\xd3\xc5\xc3\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x09\x00\x14\x8b\xd9\x00\x00\x62\xc8\x00\x00\x00\x00\x00\x03\x96\x59\xc3\xf7\xc3\xc4\x00\x00\x00\x00\x00\x00\x01\x00\x19\x00\x01\xb0\x76\x00\x00\x00\x01\x00\x00\x10\xe0\x01\x64\x71\xbe\x17\x40\x00\x00\x00\x00\x00\x00\x01\x00\x57\x42\x59\xcb\x12\x00\x01\xed\xdd\xb0\xac\xc0\xf6\xc9\xaf\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x04\x00\x03\x00\x0a\x00\x07\x01\x01\x00\x00\x00\x46\x00\x0a\x00\x01\x02\x01\x00\x00\x00\xc8\x00\x0a\x00\x02\x03\x01\x00\x00\x02\xee\x00\x00\x00\x05\x03\x00\x07\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x01\x07\x00\x00\x0f\x00\x34\xf7\x23\x07\x00\x00\xd2\x52\x00\x00\x00\xb4\x00\x00\x07\x01\x00\x00\x9a\x42\x00\x00\x00\x01\x01\x00\x0f\x03\x00\x00\x03\xfd\x00\x00\x0a\x0f\x00\x00\x00\x07\x01\x00\x1b\x00\x01\xbd\x86\xd3\xc5\xd1\xc5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\x02\x00\x01\x00\x08\x01\x00\x00\x91\x6e\x0a\x00\x00\x00\x12\x00\x00\x00\x04\x00\x00\x00\x32\x00\x00\x00\x81\x00\x00\x00\x00\x00\x00\x35\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x01\x00\x00\x7b\xc4\x00\x00\x00\xb4\x0a\x00\x00\x00\x12\x00\x00\x00\x3b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x64\x00\x00\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x35\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x16\x00\x00\x00\x1a\x00\x00\x00\x01\x00\x00\x00\x96\x00\x01\x86\x9f\x00\x00\x05\x69\x00\x00\x00\x00\x00\x00\x01\x00\x07\x01\x00\x04\x06\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", 805);
	memcpy(msg900, (BYTE*)"\x00\x00\x00\x00\x27\x11\x29\xc4\xe3\xb5\xc4\xd3\xc3\xbb\xa7\xd2\xd1\xbe\xad\xd4\xda\xc1\xed\xd2\xbb\xb8\xf6\xc9\xe8\xb1\xb8\xb5\xc7\xc2\xbc\x2c\xc4\xfa\xb1\xbb\xc6\xc8\xcf\xc2\xcf\xdf\xa3\xa1\x00\x00\x00\x00", 52);
	
}
void InitDB()
{
	sqlite3_config(SQLITE_CONFIG_SERIALIZED);
	//sqlite3_config(SQLITE_CONFIG_MULTITHREAD);//多线程读写一个实例 可能存在问题
	sqlite3_initialize();

	//打开数据库
	sqlite3_open_v2("User.db", &UserDB, SQLITE_OPEN_READWRITE | SQLITE_OPEN_CREATE | SQLITE_OPEN_FULLMUTEX, NULL);
	sqlite3_open_v2("Player.db", &PlayerDB, SQLITE_OPEN_READWRITE | SQLITE_OPEN_CREATE |  SQLITE_OPEN_FULLMUTEX, NULL);

	const char* sql = NULL;
	sqlite3_stmt* stmt = NULL;
	int result;

	//sql = "BEGIN"; //开始事务
	//result = sqlite3_exec(UserDB, sql, NULL, NULL, NULL);


	//创建 用户表
	//sql = "CREATE TABLE User (Uin INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, Name TEXT UNIQUE NOT NULL, Password TEXT);";
	//result = sqlite3_exec(UserDB, sql, NULL, NULL, NULL);
	//sql = "update sqlite_sequence set seq = 10000 where name = 'User'"; //Uin必须大于10000
	//result = sqlite3_exec(UserDB, sql, NULL, NULL, NULL);


	//sql = "COMMIT"; //提交事务
	//result = sqlite3_exec(UserDB, sql, NULL, NULL, NULL);


	//sql = "BEGIN"; //开始事务
	//result = sqlite3_exec(PlayerDB, sql, NULL, NULL, NULL);

	//创建 玩家表
	/*sql = R"(CREATE TABLE Player (
Uin INTEGER  PRIMARY KEY UNIQUE NOT NULL,
IsInTopList BOOLEAN  NOT NULL DEFAULT(0),
VipFlag INTEGER  NOT NULL DEFAULT(0),
ExFlag INTEGER  NOT NULL DEFAULT(0),
LastLoginTime INTEGER  NOT NULL DEFAULT(0)
);

CREATE TABLE BaseInfo (
	Uin INTEGER  PRIMARY KEY REFERENCES Player (Uin) UNIQUE NOT NULL,
	NickName TEXT  UNIQUE NOT NULL,
	Gender CHAR  NOT NULL DEFAULT(0),
	Country CHAR  NOT NULL DEFAULT(0),
	License INTEGER  NOT NULL DEFAULT(4),
	Experience INTEGER  NOT NULL DEFAULT(0),
	SuperMoney INTEGER  NOT NULL DEFAULT(0),
	Money INTEGER  NOT NULL DEFAULT(30),
	WinNum INTEGER  NOT NULL DEFAULT(0),
	SecondNum INTEGER  NOT NULL DEFAULT(0),
	ThirdNum INTEGER  NOT NULL DEFAULT(0),
	TotalNum INTEGER  NOT NULL DEFAULT(0),
	CurHonor INTEGER  NOT NULL DEFAULT(0),
	TotalHonor INTEGER  NOT NULL DEFAULT(0),
	TodayHonor INTEGER  NOT NULL DEFAULT(0),
	RelaxTime INTEGER  NOT NULL DEFAULT(0),
	MonthDurationBefor INTEGER  NOT NULL DEFAULT(0),
	MonthDurationCur INTEGER  NOT NULL DEFAULT(0),
	Charm INTEGER  NOT NULL DEFAULT(0),
	DurationGame INTEGER  NOT NULL DEFAULT(0),
	DanceExp INTEGER  NOT NULL DEFAULT(0),
	Coupons INTEGER  NOT NULL DEFAULT(0),
	Admiration INTEGER  NOT NULL DEFAULT(0),
	LuckMoney INTEGER  NOT NULL DEFAULT(0),
	TeamWorkExp INTEGER  NOT NULL DEFAULT(0),
	AchievePoint INTEGER  NOT NULL DEFAULT(0),
	RegTime INTEGER  NOT NULL  DEFAULT(strftime('%s', 'now')),
	Signature TEXT  NOT NULL DEFAULT('')
);

CREATE TABLE Item (
	Uin            INTEGER  REFERENCES Player (Uin) NOT NULL,
	ItemID         INTEGER  NOT NULL,
	ItemNum        INTEGER  NOT NULL DEFAULT(1),
	AvailPeriod    INTEGER  NOT NULL DEFAULT(-1),
	Status         BOOLEAN  NOT NULL DEFAULT(0),
	ObtainTime     INTEGER  NOT NULL DEFAULT(strftime('%s', 'now')),
	OtherAttribute INTEGER  NOT NULL DEFAULT(0)
);

CREATE TABLE MapRecord (
	Uin				INTEGER  REFERENCES Player (Uin) NOT NULL,
	MapID			INTEGER  NOT NULL,
	Record			INTEGER  NOT NULL DEFAULT(-1),
	LastUpdateTime	INTEGER  NOT NULL DEFAULT(0)
);

CREATE TABLE KartStoneGroove (
	Uin					INTEGER  REFERENCES Player (Uin) NOT NULL,
	KartID				INTEGER  NOT NULL,
	ID					INTEGER  NOT NULL PRIMARY KEY AUTOINCREMENT
);

CREATE TABLE KartStone (
	ID					INTEGER  REFERENCES KartStoneGroove (ID) NOT NULL,
	StoneGrooveID		INTEGER  NOT NULL,
	StoneUseOccaType	INTEGER  NOT NULL,
	SkillStoneID		INTEGER  NOT NULL DEFAULT(0)
);

CREATE TABLE KartRefit (
	Uin						INTEGER  REFERENCES Player (Uin) NOT NULL,
	KartID					INTEGER  NOT NULL,
	RefitCout				INTEGER  NOT NULL DEFAULT(0),
	MaxFlags				INTEGER  NOT NULL DEFAULT(0),
	WWeight					INTEGER  NOT NULL DEFAULT(0),
	SpeedWeight				INTEGER  NOT NULL DEFAULT(0),
	JetWeight				INTEGER  NOT NULL DEFAULT(0),
	SJetWeight				INTEGER  NOT NULL DEFAULT(0),
	AccuWeight				INTEGER  NOT NULL DEFAULT(0),
	ShapeRefitCount			INTEGER  NOT NULL DEFAULT(0),
	KartHeadRefitItemID		INTEGER  NOT NULL DEFAULT(0),
	KartTailRefitItemID		INTEGER  NOT NULL DEFAULT(0),
	KartFlankRefitItemID	INTEGER  NOT NULL DEFAULT(0),
	KartTireRefitItemID		INTEGER  NOT NULL DEFAULT(0)
);
)";
	result = sqlite3_exec(PlayerDB, sql, NULL, NULL, NULL);


	sql = "COMMIT"; //提交事务
	result = sqlite3_exec(PlayerDB, sql, NULL, NULL, NULL);
	*/
}

void CloseDB()
{
	const char* sql = NULL;
	int result;

	sql = "VACUUM";
	result = sqlite3_exec(PlayerDB, sql, NULL, NULL, NULL);
	sqlite3_close(PlayerDB);

	sql = "VACUUM";
	result = sqlite3_exec(UserDB, sql, NULL, NULL, NULL);
	sqlite3_close(UserDB);

	sqlite3_shutdown();
}


BOOL UserDB_Register(const char* Username, const char* Password)
{
	const char* sql = NULL;
	sqlite3_stmt* stmt = NULL;
	int result;

	sql = "INSERT INTO User (Name, Password) VALUES(?, ?);";
	result = sqlite3_prepare_v2(UserDB, sql, -1, &stmt, NULL);
	if (result == SQLITE_OK) {
		sqlite3_bind_text(stmt, 1, Username, strlen(Username), SQLITE_TRANSIENT);
		sqlite3_bind_blob(stmt, 2, Password, strlen(Password), SQLITE_TRANSIENT);
		result = sqlite3_step(stmt);
	}
	sqlite3_finalize(stmt);
	stmt = NULL;
	return result == SQLITE_DONE;
}

DWORD UserDB_GetUin(const char* Username)
{
	const char* sql = NULL;
	sqlite3_stmt* stmt = NULL;
	int result;
	int uin = 0;

	sql = "SELECT Uin, Password  FROM User  WHERE Name=?;";
	result = sqlite3_prepare_v2(UserDB, sql, -1, &stmt, NULL);
	if (result == SQLITE_OK) {
		sqlite3_bind_text(stmt, 1, Username, strlen(Username), SQLITE_TRANSIENT);
		result = sqlite3_step(stmt);
		if (result == SQLITE_ROW)
		{
			uin = sqlite3_column_int(stmt, 0);
			uin += 10000; //必须大于10000,否则会出问题
		}
		else
		{
			//未注册
		}
	}
	sqlite3_finalize(stmt);
	stmt = NULL;

	return uin;
}

BOOL UserDB_CmpPassword(DWORD Uin, const char* Password)
{
	const char* sql = NULL;
	sqlite3_stmt* stmt = NULL;
	int result;
	BOOL ret = FALSE;

	sql = "SELECT Password  FROM User  WHERE Uin=?;";
	result = sqlite3_prepare_v2(UserDB, sql, -1, &stmt, NULL);
	if (result == SQLITE_OK) {
		sqlite3_bind_int(stmt, 1, Uin - 10000);
		result = sqlite3_step(stmt);
		if (result == SQLITE_ROW)
		{
			char* pwd = (char*)sqlite3_column_blob(stmt, 0);
			if (strcmp(pwd, Password) == 0)
			{
				ret = TRUE;
			}
		}
		else
		{
			//未注册
		}
	}
	sqlite3_finalize(stmt);
	stmt = NULL;

	return ret;
}

int PlayerDB_AddItem(ClientNode *Client,DWORD Uin, DWORD ItemID, DWORD ItemNum, int AvailPeriod, bool Status)
{
	const char* sql = NULL;
	sqlite3_stmt* stmt = NULL;
	int result;
	int count = 0;
	BOOL isExist = TRUE;
	//先查询是否有这个物品
	sql = "SELECT ItemNum FROM Item  WHERE Uin=? AND ItemID=?;";
	result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
	if (result == SQLITE_OK) {
		sqlite3_bind_int(stmt, 1, Uin);
		sqlite3_bind_int(stmt, 2, ItemID);
		result = sqlite3_step(stmt);
		if (result == SQLITE_ROW)
		{
			count= sqlite3_column_int(stmt, 0);
			//printf("Itemcount:%d \n", count);
		}
		else
		{
			isExist = FALSE;
			//count = 0;//如果没有任何一条记录
		}
	}
	sqlite3_finalize(stmt);
	stmt = NULL;
	//printf("ItemNum+count:%d \n", ItemNum + count);
	if (isExist)
	{
		//有进行更新操作
		sql = "UPDATE Item SET ItemNum=?  WHERE Uin=? AND ItemID=?;";
		result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
		if (result == SQLITE_OK) {
			sqlite3_bind_int(stmt, 1, ItemNum+count);
			sqlite3_bind_int(stmt, 2, Uin);
			sqlite3_bind_int(stmt, 3, ItemID);
			result = sqlite3_step(stmt);
		}
		sqlite3_finalize(stmt);
		stmt = NULL;
	}
	else
	{
		//没有执行插入操作
		sql = "INSERT INTO Item (Uin,ItemID,ItemNum,AvailPeriod,Status) VALUES (?,?,?,?,?);";
		result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
		if (result == SQLITE_OK) {
			sqlite3_bind_int(stmt, 1, Uin);
			sqlite3_bind_int(stmt, 2, ItemID);
			sqlite3_bind_int(stmt, 3, ItemNum);
			sqlite3_bind_int(stmt, 4, AvailPeriod);
			sqlite3_bind_int(stmt, 5, Status);
			result = sqlite3_step(stmt);
		}
		sqlite3_finalize(stmt);
		stmt = NULL;
		if (GetItemType(ItemID) == EAIT_CAR)
		{
			//注意这里先查询一下有就不加不然重复加会出bug
			int ID = 0;
			sql = "SELECT ID  FROM KartStoneGroove  WHERE Uin=? AND KartID=?;";
			result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
			if (result == SQLITE_OK) {
				sqlite3_bind_int(stmt, 1, Uin);
				sqlite3_bind_int(stmt, 2, ItemID);
				result = sqlite3_step(stmt);
				if (result == SQLITE_ROW)
				{
					ID = sqlite3_column_int(stmt, 0);
				}
				else
				{
					ID = 0;//如果没有任何一条记录
				}
			}
			sqlite3_finalize(stmt);
			stmt = NULL;
			if (ID == 0)//不存在重复的宝石ID号 才加宝石和改装信息
			{
				sql = "INSERT INTO KartStoneGroove (Uin,KartID) VALUES (?,?);";
				result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
				if (result == SQLITE_OK) {
					sqlite3_bind_int(stmt, 1, Uin);
					sqlite3_bind_int(stmt, 2, ItemID);
					result = sqlite3_step(stmt);
				}
				sqlite3_finalize(stmt);
				stmt = NULL;

				sql = "SELECT ID  FROM KartStoneGroove  WHERE Uin=? AND KartID=?;";
				result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
				if (result == SQLITE_OK) {
					sqlite3_bind_int(stmt, 1, Uin);
					sqlite3_bind_int(stmt, 2, ItemID);
					result = sqlite3_step(stmt);
					if (result == SQLITE_ROW)
					{
						ID = sqlite3_column_int(stmt, 0);
					}
					else
					{
						ID = 0;//如果没有任何一条记录
					}
				}
				sqlite3_finalize(stmt);
				stmt = NULL;
				//分配5个宝石槽  3园 2三角
				for (int StoneGrooveID = 1; StoneGrooveID <= 3; StoneGrooveID++)
				{
					sql = "INSERT INTO KartStone (ID,StoneGrooveID,StoneUseOccaType) VALUES (?,?,?);";
					result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
					if (result == SQLITE_OK) {
						sqlite3_bind_int(stmt, 1, ID);
						sqlite3_bind_int(stmt, 2, StoneGrooveID);
						sqlite3_bind_int(stmt, 3, 0); //圆形
						result = sqlite3_step(stmt);
					}
					sqlite3_finalize(stmt);
					stmt = NULL;
				}
				for (int StoneGrooveID = 4; StoneGrooveID <= 5; StoneGrooveID++)
				{
					sql = "INSERT INTO KartStone (ID,StoneGrooveID,StoneUseOccaType) VALUES (?,?,?);";
					result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
					if (result == SQLITE_OK) {
						sqlite3_bind_int(stmt, 1, ID);
						sqlite3_bind_int(stmt, 2, StoneGrooveID);
						sqlite3_bind_int(stmt, 3, 1); //三角形
						result = sqlite3_step(stmt);
					}
					sqlite3_finalize(stmt);
					stmt = NULL;
				}
				NotifyUpdateKartSkillStoneInfo(Client, ItemID);
			}
			//先查询是否改装信息
			sql = "SELECT KartID FROM KartRefit WHERE Uin=? AND KartID=?;";
			result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
			if (result == SQLITE_OK) {
				sqlite3_bind_int(stmt, 1, Uin);
				sqlite3_bind_int(stmt, 2, ItemID);
				result = sqlite3_step(stmt);
				if (result == SQLITE_ROW)
				{
					ID = sqlite3_column_int(stmt, 0);
				}
				else
				{
					ID = 0;//如果没有任何一条记录
				}
			}
			sqlite3_finalize(stmt);
			stmt = NULL;
			//改装信息
			//printf("ID：%d\n", ID);
			if (ID == 0)
			{
			//	printf("ID：%d\n", ID);
				sql = "INSERT INTO KartRefit(Uin,KartID) VALUES (?,?);";
				result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
				if (result == SQLITE_OK) {
					sqlite3_bind_int(stmt, 1, Uin);
					sqlite3_bind_int(stmt, 2, ItemID);
					result = sqlite3_step(stmt);
				}
				sqlite3_finalize(stmt);
				stmt = NULL;
			}
		}
	}
	return ItemNum + count;
}

DWORD PlayerDB_GetMapRecord(DWORD Uin, int MapID)
{
	const char* sql = NULL;
	sqlite3_stmt* stmt = NULL;
	int result;

	int ret = -1;
	sql = "SELECT Record  FROM MapRecord  WHERE Uin=? AND MapID=?;";
	result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
	if (result == SQLITE_OK) {
		sqlite3_bind_int(stmt, 1, Uin);
		sqlite3_bind_int(stmt, 2, MapID);
		result = sqlite3_step(stmt);
		if (result == SQLITE_ROW)
		{
			ret = sqlite3_column_int(stmt, 0);
		}
	}
	sqlite3_finalize(stmt);
	stmt = NULL;
	return ret;
}

bool PlayerDB_SetMapRecord(DWORD Uin, int MapID, DWORD Record)
{
	bool NewRecord = true;
	const char* sql = NULL;
	sqlite3_stmt* stmt = NULL;
	int result;

	sql = "SELECT Record  FROM MapRecord  WHERE Uin=? AND MapID=?;";
	result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
	if (result == SQLITE_OK) {
		sqlite3_bind_int(stmt, 1, Uin);
		sqlite3_bind_int(stmt, 2, MapID);
		result = sqlite3_step(stmt);
		if (result == SQLITE_ROW)
		{
			if ((DWORD)sqlite3_column_int(stmt, 0) < Record)
			{
				NewRecord = false;
			}
			else
			{
				sqlite3_finalize(stmt);
				stmt = NULL;
				sql = "UPDATE MapRecord SET Record=?  WHERE Uin=? AND MapID=?;";
				result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
				if (result == SQLITE_OK) {
					sqlite3_bind_int(stmt, 1, Record);
					sqlite3_bind_int(stmt, 2, Uin);
					sqlite3_bind_int(stmt, 3, MapID);
					result = sqlite3_step(stmt);
				}
			}
		}
		else
		{
			sqlite3_finalize(stmt);
			stmt = NULL;
			sql = "INSERT INTO MapRecord (Uin, MapID, Record) VALUES(?, ?, ?);";
			result = sqlite3_prepare_v2(PlayerDB, sql, -1, &stmt, NULL);
			if (result == SQLITE_OK) {
				sqlite3_bind_int(stmt, 1, Uin);
				sqlite3_bind_int(stmt, 2, MapID);
				sqlite3_bind_int(stmt, 3, Record);
				result = sqlite3_step(stmt);
			}
		}
	}
	sqlite3_finalize(stmt);
	stmt = NULL;

	return NewRecord;
}

